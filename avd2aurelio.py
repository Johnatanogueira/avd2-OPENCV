# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1h1q1Wt2D6C5bmGjyDuAbU_VBLhwJb9E5
"""

# Importando as nossa dependências comuns
# Carrega o detector de faces da dlib. 
from PIL import Image
import cv2 as cv
import numpy as np
from google.colab.patches import cv2_imshow
import dlib

# Carrega o detector dlib.  
# o detector de faces padrão já vem adicionado na biblioteca
detector_face = dlib.get_frontal_face_detector()

imagemquadrado = cv.imread('jovens.png')
deteccoes = detector_face(imagemquadrado, 1)
for face in deteccoes:
  l, t, r, b = face.left(), face.top(), face.right(), face.bottom()
  cv.rectangle(imagemquadrado, (l,t), (r, b), (255,0,0), 2)


cv2_imshow(imagemquadrado)

# Carrega o detector de marcos faciais da dlib:
detector_pontos = dlib.shape_predictor('shape_predictor_5_face_landmarks.dat')

imagem2circulored = cv.imread('jovens.png')

deteccoes = detector_face(imagem2circulored, 1)
for face in deteccoes:
  # Para cada detecção (retângulo de uma face encontrada), é adicionado"pontos":
  pontos = detector_pontos(imagem2circulored, face)
  # Agora desenhamos cada marco facial de cada face encontrada na imagem.
  # Repare como os marcos faciais contornam olhos, e centro entre nariz e boca 
  for ponto in pontos.parts():
    cv.circle(imagem2circulored, (ponto.x, ponto.y), 4, (0,0,255), 4)

  # No final foi desenhado os retângulos.
  l, t, r, b = face.left(), face.top(), face.right(), face.bottom()
  cv.rectangle(imagem2circulored, (l,t), (r, b), (255,0,0), 2)


cv2_imshow(imagem2circulored)

# dessa vez adicionamos no lugar dos pontos um circulo em todo rosto
detector_face = dlib.get_frontal_face_detector()

deteccoes = detector_face(imagemquadrado, 1)
for face in deteccoes:
  l, t, r, b = face.left(), face.top(), face.right(), face.bottom()

  cv.circle(imagemquadrado, ((l+r)//2, (t+b)//2), (r-l)//2, (0,255,0))

cv2_imshow(imagemquadrado)